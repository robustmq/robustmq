/**
 * @fileoverview gRPC-Web generated client stub for placement.center.journal
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.3
// source: journal.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as journal_pb from './journal_pb'; // proto import: "journal.proto"


export class EngineServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorListShard = new grpcWeb.MethodDescriptor(
    '/placement.center.journal.EngineService/ListShard',
    grpcWeb.MethodType.UNARY,
    journal_pb.ListShardRequest,
    journal_pb.ListShardReply,
    (request: journal_pb.ListShardRequest) => {
      return request.serializeBinary();
    },
    journal_pb.ListShardReply.deserializeBinary
  );

  listShard(
    request: journal_pb.ListShardRequest,
    metadata?: grpcWeb.Metadata | null): Promise<journal_pb.ListShardReply>;

  listShard(
    request: journal_pb.ListShardRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: journal_pb.ListShardReply) => void): grpcWeb.ClientReadableStream<journal_pb.ListShardReply>;

  listShard(
    request: journal_pb.ListShardRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: journal_pb.ListShardReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/placement.center.journal.EngineService/ListShard',
        request,
        metadata || {},
        this.methodDescriptorListShard,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/placement.center.journal.EngineService/ListShard',
    request,
    metadata || {},
    this.methodDescriptorListShard);
  }

  methodDescriptorCreateShard = new grpcWeb.MethodDescriptor(
    '/placement.center.journal.EngineService/CreateShard',
    grpcWeb.MethodType.UNARY,
    journal_pb.CreateShardRequest,
    journal_pb.CreateShardReply,
    (request: journal_pb.CreateShardRequest) => {
      return request.serializeBinary();
    },
    journal_pb.CreateShardReply.deserializeBinary
  );

  createShard(
    request: journal_pb.CreateShardRequest,
    metadata?: grpcWeb.Metadata | null): Promise<journal_pb.CreateShardReply>;

  createShard(
    request: journal_pb.CreateShardRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: journal_pb.CreateShardReply) => void): grpcWeb.ClientReadableStream<journal_pb.CreateShardReply>;

  createShard(
    request: journal_pb.CreateShardRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: journal_pb.CreateShardReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/placement.center.journal.EngineService/CreateShard',
        request,
        metadata || {},
        this.methodDescriptorCreateShard,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/placement.center.journal.EngineService/CreateShard',
    request,
    metadata || {},
    this.methodDescriptorCreateShard);
  }

  methodDescriptorDeleteShard = new grpcWeb.MethodDescriptor(
    '/placement.center.journal.EngineService/DeleteShard',
    grpcWeb.MethodType.UNARY,
    journal_pb.DeleteShardRequest,
    journal_pb.DeleteShardReply,
    (request: journal_pb.DeleteShardRequest) => {
      return request.serializeBinary();
    },
    journal_pb.DeleteShardReply.deserializeBinary
  );

  deleteShard(
    request: journal_pb.DeleteShardRequest,
    metadata?: grpcWeb.Metadata | null): Promise<journal_pb.DeleteShardReply>;

  deleteShard(
    request: journal_pb.DeleteShardRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: journal_pb.DeleteShardReply) => void): grpcWeb.ClientReadableStream<journal_pb.DeleteShardReply>;

  deleteShard(
    request: journal_pb.DeleteShardRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: journal_pb.DeleteShardReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/placement.center.journal.EngineService/DeleteShard',
        request,
        metadata || {},
        this.methodDescriptorDeleteShard,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/placement.center.journal.EngineService/DeleteShard',
    request,
    metadata || {},
    this.methodDescriptorDeleteShard);
  }

  methodDescriptorListSegment = new grpcWeb.MethodDescriptor(
    '/placement.center.journal.EngineService/ListSegment',
    grpcWeb.MethodType.UNARY,
    journal_pb.ListSegmentRequest,
    journal_pb.ListSegmentReply,
    (request: journal_pb.ListSegmentRequest) => {
      return request.serializeBinary();
    },
    journal_pb.ListSegmentReply.deserializeBinary
  );

  listSegment(
    request: journal_pb.ListSegmentRequest,
    metadata?: grpcWeb.Metadata | null): Promise<journal_pb.ListSegmentReply>;

  listSegment(
    request: journal_pb.ListSegmentRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: journal_pb.ListSegmentReply) => void): grpcWeb.ClientReadableStream<journal_pb.ListSegmentReply>;

  listSegment(
    request: journal_pb.ListSegmentRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: journal_pb.ListSegmentReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/placement.center.journal.EngineService/ListSegment',
        request,
        metadata || {},
        this.methodDescriptorListSegment,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/placement.center.journal.EngineService/ListSegment',
    request,
    metadata || {},
    this.methodDescriptorListSegment);
  }

  methodDescriptorCreateNextSegment = new grpcWeb.MethodDescriptor(
    '/placement.center.journal.EngineService/CreateNextSegment',
    grpcWeb.MethodType.UNARY,
    journal_pb.CreateNextSegmentRequest,
    journal_pb.CreateNextSegmentReply,
    (request: journal_pb.CreateNextSegmentRequest) => {
      return request.serializeBinary();
    },
    journal_pb.CreateNextSegmentReply.deserializeBinary
  );

  createNextSegment(
    request: journal_pb.CreateNextSegmentRequest,
    metadata?: grpcWeb.Metadata | null): Promise<journal_pb.CreateNextSegmentReply>;

  createNextSegment(
    request: journal_pb.CreateNextSegmentRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: journal_pb.CreateNextSegmentReply) => void): grpcWeb.ClientReadableStream<journal_pb.CreateNextSegmentReply>;

  createNextSegment(
    request: journal_pb.CreateNextSegmentRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: journal_pb.CreateNextSegmentReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/placement.center.journal.EngineService/CreateNextSegment',
        request,
        metadata || {},
        this.methodDescriptorCreateNextSegment,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/placement.center.journal.EngineService/CreateNextSegment',
    request,
    metadata || {},
    this.methodDescriptorCreateNextSegment);
  }

  methodDescriptorDeleteSegment = new grpcWeb.MethodDescriptor(
    '/placement.center.journal.EngineService/DeleteSegment',
    grpcWeb.MethodType.UNARY,
    journal_pb.DeleteSegmentRequest,
    journal_pb.DeleteSegmentReply,
    (request: journal_pb.DeleteSegmentRequest) => {
      return request.serializeBinary();
    },
    journal_pb.DeleteSegmentReply.deserializeBinary
  );

  deleteSegment(
    request: journal_pb.DeleteSegmentRequest,
    metadata?: grpcWeb.Metadata | null): Promise<journal_pb.DeleteSegmentReply>;

  deleteSegment(
    request: journal_pb.DeleteSegmentRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: journal_pb.DeleteSegmentReply) => void): grpcWeb.ClientReadableStream<journal_pb.DeleteSegmentReply>;

  deleteSegment(
    request: journal_pb.DeleteSegmentRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: journal_pb.DeleteSegmentReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/placement.center.journal.EngineService/DeleteSegment',
        request,
        metadata || {},
        this.methodDescriptorDeleteSegment,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/placement.center.journal.EngineService/DeleteSegment',
    request,
    metadata || {},
    this.methodDescriptorDeleteSegment);
  }

  methodDescriptorUpdateSegmentStatus = new grpcWeb.MethodDescriptor(
    '/placement.center.journal.EngineService/UpdateSegmentStatus',
    grpcWeb.MethodType.UNARY,
    journal_pb.UpdateSegmentStatusRequest,
    journal_pb.UpdateSegmentStatusReply,
    (request: journal_pb.UpdateSegmentStatusRequest) => {
      return request.serializeBinary();
    },
    journal_pb.UpdateSegmentStatusReply.deserializeBinary
  );

  updateSegmentStatus(
    request: journal_pb.UpdateSegmentStatusRequest,
    metadata?: grpcWeb.Metadata | null): Promise<journal_pb.UpdateSegmentStatusReply>;

  updateSegmentStatus(
    request: journal_pb.UpdateSegmentStatusRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: journal_pb.UpdateSegmentStatusReply) => void): grpcWeb.ClientReadableStream<journal_pb.UpdateSegmentStatusReply>;

  updateSegmentStatus(
    request: journal_pb.UpdateSegmentStatusRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: journal_pb.UpdateSegmentStatusReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/placement.center.journal.EngineService/UpdateSegmentStatus',
        request,
        metadata || {},
        this.methodDescriptorUpdateSegmentStatus,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/placement.center.journal.EngineService/UpdateSegmentStatus',
    request,
    metadata || {},
    this.methodDescriptorUpdateSegmentStatus);
  }

  methodDescriptorListSegmentMeta = new grpcWeb.MethodDescriptor(
    '/placement.center.journal.EngineService/ListSegmentMeta',
    grpcWeb.MethodType.UNARY,
    journal_pb.ListSegmentMetaRequest,
    journal_pb.ListSegmentMetaReply,
    (request: journal_pb.ListSegmentMetaRequest) => {
      return request.serializeBinary();
    },
    journal_pb.ListSegmentMetaReply.deserializeBinary
  );

  listSegmentMeta(
    request: journal_pb.ListSegmentMetaRequest,
    metadata?: grpcWeb.Metadata | null): Promise<journal_pb.ListSegmentMetaReply>;

  listSegmentMeta(
    request: journal_pb.ListSegmentMetaRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: journal_pb.ListSegmentMetaReply) => void): grpcWeb.ClientReadableStream<journal_pb.ListSegmentMetaReply>;

  listSegmentMeta(
    request: journal_pb.ListSegmentMetaRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: journal_pb.ListSegmentMetaReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/placement.center.journal.EngineService/ListSegmentMeta',
        request,
        metadata || {},
        this.methodDescriptorListSegmentMeta,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/placement.center.journal.EngineService/ListSegmentMeta',
    request,
    metadata || {},
    this.methodDescriptorListSegmentMeta);
  }

  methodDescriptorUpdateSegmentMeta = new grpcWeb.MethodDescriptor(
    '/placement.center.journal.EngineService/UpdateSegmentMeta',
    grpcWeb.MethodType.UNARY,
    journal_pb.UpdateSegmentMetaRequest,
    journal_pb.UpdateSegmentMetaReply,
    (request: journal_pb.UpdateSegmentMetaRequest) => {
      return request.serializeBinary();
    },
    journal_pb.UpdateSegmentMetaReply.deserializeBinary
  );

  updateSegmentMeta(
    request: journal_pb.UpdateSegmentMetaRequest,
    metadata?: grpcWeb.Metadata | null): Promise<journal_pb.UpdateSegmentMetaReply>;

  updateSegmentMeta(
    request: journal_pb.UpdateSegmentMetaRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: journal_pb.UpdateSegmentMetaReply) => void): grpcWeb.ClientReadableStream<journal_pb.UpdateSegmentMetaReply>;

  updateSegmentMeta(
    request: journal_pb.UpdateSegmentMetaRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: journal_pb.UpdateSegmentMetaReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/placement.center.journal.EngineService/UpdateSegmentMeta',
        request,
        metadata || {},
        this.methodDescriptorUpdateSegmentMeta,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/placement.center.journal.EngineService/UpdateSegmentMeta',
    request,
    metadata || {},
    this.methodDescriptorUpdateSegmentMeta);
  }

}

