/*
 * Copyright (c) 2023 RobustMQ Team
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";
package broker.mqtt.inner;
service MQTTBrokerInnerService {
    rpc updateCache(UpdateCacheRequest) returns(UpdateCacheReply){}
    rpc deleteSession(DeleteSessionRequest) returns(DeleteSessionReply){}
    rpc sendLastWillMessage(SendLastWillMessageRequest) returns(SendLastWillMessageReply){}
}

message UpdateCacheRequest{
    string cluster_name = 1;
    MQTTBrokerUpdateCacheActionType action_type = 2;
    MQTTBrokerUpdateCacheResourceType resource_type = 3;
    bytes data =4 ;
}

message DeleteSessionRequest{
    string cluster_name = 1;
    repeated string client_id = 2;
}

message UpdateCacheReply{
    bool code = 1;
    string data = 2;
}

message DeleteSessionReply{
    bool code = 1;
    string data = 2;
}

message SendLastWillMessageReply{
    bool code = 1;
    string data = 2;
}

enum MQTTBrokerUpdateCacheActionType{
    Add = 0;
    Delete = 1;
}

enum MQTTBrokerUpdateCacheResourceType{
    Session = 0;
    User = 1;
}

message SendLastWillMessageRequest{
    string client_id = 1;
    bytes last_will_message =2 ;
}