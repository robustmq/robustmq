/*
 * Copyright 2023 RobustMQ Team
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";
package meta.service.openraft;

service OpenRaftService {
  rpc Vote(VoteRequest) returns (VoteReply) {}

  rpc Append(AppendRequest) returns (AppendReply) {}

  rpc Snapshot(SnapshotRequest) returns (SnapshotReply) {}

  rpc AddLearner(AddLearnerRequest) returns (AddLearnerReply) {}

  rpc ChangeMembership(ChangeMembershipRequest) returns (ChangeMembershipReply) {}
}

message VoteRequest {
  bytes value = 1;
}

message VoteReply {
  bytes value = 1;
}

message AppendRequest {
  bytes value = 1;
}

message AppendReply {
  bytes value = 1;
}

message SnapshotRequest {
  bytes value = 1;
}

message SnapshotReply {
  bytes value = 1;
}

message AddLearnerRequest {
  uint64 node_id = 1;
  Node node = 2;
  bool blocking = 3;
}

message Node {
  string rpc_addr = 1;
  uint64 node_id = 2;
}

message AddLearnerReply {
  bytes value = 1;
}

message ChangeMembershipRequest {
  repeated uint64 members = 1;
  bool retain = 2;
}

message ChangeMembershipReply {
  bytes value = 1;
}
