syntax = "proto3";
package journal.engine;

/** Error **/

message JournalEngineError{
    ErrorCode code = 1;
    string error = 2;
}

/** Header **/
enum ApiKey{
    Read = 0;
    Write = 1;
    GetActiveSegment = 2;
    OffsetCommit = 3;
    GetClusterMetadata = 4;
}

enum ApiVersion{
     V0 = 0;
}

enum ErrorCode{
    Success = 0;
}

message ReqHeader{
    ApiKey api_key = 1;
    ApiVersion api_version = 2;
}

/**  Read Request **/
message RespHeader{
    ApiKey api_key = 1;
    ApiVersion api_version = 2;
}

message ReadReqBody{
}

message ReadRespBody{
}

message ReadReq{
    ReqHeader header = 1;
    ReadReqBody body = 2;
}

message ReadResp{
    RespHeader header = 1;
    ReadRespBody body = 2;
}

/** Write Request **/
message WriteReqBody{
}

message WriteRespBody{
}

message WriteReq{
    ReqHeader header = 1;
    WriteReqBody body = 2;
}

message WriteResp{
    RespHeader header = 1;
    WriteRespBody body = 2;
}

/** Get Cluster Metadata **/

message GetClusterMetadataReq{
    ReqHeader header = 1;
}

message GetClusterMetadataRespBody{
    repeated GetClusterMetadataNode nodes = 1;
}

message GetClusterMetadataNode{
    uint32 replica_id = 1;
    string replica_addr = 2;
}

message GetClusterMetadataResp{
    RespHeader header = 1;
    GetClusterMetadataRespBody body = 2;
}

/** Get Active Segment **/
message GetActiveSegmentReqBody{
    string namespace = 1;
    string shard = 2;
}

message GetActiveSegmentRespBody{
    repeated uint32 replica_id = 1;
    JournalEngineError error = 2;
}

message GetActiveSegmentReq{
    ReqHeader header = 1;
    GetActiveSegmentReqBody body = 2;
}

message GetActiveSegmentResp{
    RespHeader header = 1;
    GetActiveSegmentRespBody body = 2;
}

/** Offset Commit **/
message OffsetCommitReqBody{
    string namespace = 1;
    string group = 2;
    repeated OffsetCommitShard shard = 3;
}

message OffsetCommitShard{
    string shard_name = 1;
    string offset =2;
}

message OffsetCommitRespBody{
    string namespacde = 1;
    string group = 2;
    repeated OffsetCommitShardResp resp = 3;
}

message OffsetCommitShardResp{
    string shard_name = 1;
    ErrorCode err_code = 2;
    string error = 3;
}

message OffsetCommitReq{
    ReqHeader header = 1;
    OffsetCommitReqBody body = 2;
}

message OffsetCommitResp{
    RespHeader header = 1;
    OffsetCommitRespBody body = 2;
}
