# Copyright 2023 RobustMQ Team
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Code Style

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - "docs/**"
      - "**.md"
      - ".github/ISSUE_TEMPLATE/**"
      - ".github/pull_request_template.md"
  pull_request:
    paths-ignore:
      - "docs/**"
      - "**.md"
      - ".github/ISSUE_TEMPLATE/**"
      - ".github/pull_request_template.md"

# Cancel previous runs if a new commit is pushed
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  # Fast checks that don't need compilation cache
  rustfmt:
    runs-on: ubuntu-latest
    container:
      image: rust:latest
    steps:
      - uses: actions/checkout@v5
      - name: Install rustfmt
        run: rustup component add rustfmt
      - name: cargo rust-fmt
        run: cargo fmt --all -- --check

  deny:
    runs-on: ubuntu-latest
    container:
      image: rust:latest
    steps:
      - uses: actions/checkout@v5
      - name: Install cargo-deny
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-deny@0.16.2
      - name: cargo deny check
        run: cargo-deny check licenses

  typos:
    runs-on: ubuntu-latest
    container:
      image: rust:latest
    steps:
      - uses: actions/checkout@v5
      - name: Install typos
        uses: taiki-e/install-action@v2
        with:
          tool: typos-cli@1.27.3
      - name: typos check
        run: typos

  # Compilation checks with shared cache
  # Run cargo check and clippy together to share compilation cache
  compile-and-lint:
    runs-on: ubuntu-latest
    container:
      image: rust:latest
    steps:
      - uses: actions/checkout@v5
      
      - name: Setup Rust toolchain
        uses: ./.github/actions/setup-builder
      
      - name: Install clippy
        run: rustup component add clippy
      
      - name: Setup sccache
        uses: ./.github/actions/setup-sccache
      
      - name: Optimize build environment
        run: |
          echo "CARGO_BUILD_JOBS=10" >> $GITHUB_ENV
          # Disable incremental compilation (required for sccache)
          echo "CARGO_INCREMENTAL=0" >> $GITHUB_ENV
      
      - name: Cargo clippy (includes compilation check)
        # Clippy includes cargo check, so we skip separate check step
        # Only check main targets, skip benches to save time
        run: cargo clippy --workspace --all-targets --tests -- -D warnings
      
      - name: Show sccache stats
        if: always()
        continue-on-error: true
        run: sccache --show-stats || echo "sccache not available"
      
      - name: Clean large artifacts
        if: always()
        run: |
          rm -rf target/debug/incremental
          rm -rf target/debug/build
          find target -name "*.rlib" -delete 2>/dev/null || true
