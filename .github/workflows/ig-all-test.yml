# Copyright 2023 RobustMQ Team
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Ig All Test

on:
  push:
    paths-ignore:
      - "docs/**"
      - "**.md"
      - ".github/ISSUE_TEMPLATE/**"
      - ".github/pull_request_template.md"
  pull_request:
    paths-ignore:
      - "docs/**"
      - "**.md"
      - ".github/ISSUE_TEMPLATE/**"
      - ".github/pull_request_template.md"

# Cancel previous runs if a new commit is pushed
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  linux-tests:
    name: cargo test
    runs-on: ubuntu-22.04
    timeout-minutes: 300
    container:
      image: amd64/rust
    steps:
      - name: Check initial disk space
        run: df -h

      - name: Free up disk space before build
        run: |
          # Remove unnecessary files to free up space (in container, already root)
          rm -rf /usr/share/dotnet 2>/dev/null || true
          rm -rf /usr/local/lib/android 2>/dev/null || true
          rm -rf /opt/ghc 2>/dev/null || true
          rm -rf /opt/hostedtoolcache/CodeQL 2>/dev/null || true
          df -h

      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: set up build configure
        uses: ./.github/actions/setup-builder

      - name: Install cargo-nextest
        uses: taiki-e/install-action@v2
        with:
          tool: nextest

      - name: Setup sccache
        uses: ./.github/actions/setup-sccache

      - name: Optimize build environment
        run: |
          # Set compiler flags for smaller binaries
          echo "CARGO_PROFILE_RELEASE_LTO=thin" >> $GITHUB_ENV
          echo "CARGO_PROFILE_RELEASE_CODEGEN_UNITS=1" >> $GITHUB_ENV
          # Set optimal parallel jobs (balance speed and memory)
          echo "CARGO_BUILD_JOBS=8" >> $GITHUB_ENV

      - name: Check disk space before test
        run: df -h

      - name: Run tests
        run: sh ./scripts/mqtt-ig.sh

      - name: Check disk space after test
        if: always()
        run: df -h

      - name: Show target directory size
        if: always()
        run: du -sh target/* | sort -rh | head -10

      - name: Clean test artifacts and large files
        if: always()
        run: |
          # Clean test artifacts
          rm -rf target/nextest
          rm -rf target/debug/incremental
          rm -rf target/release/incremental
          # Clean large build artifacts
          rm -rf target/debug/deps
          rm -rf target/debug/build
          rm -rf target/release/build
          # Clean temporary files
          find target -type f -name "*-????????????????" -delete 2>/dev/null || true
          # Clean test binaries (usually large)
          find target -name "*test*" -type f -delete 2>/dev/null || true
          # Clean .rlib files (intermediate objects, can be large)
          find target/release -name "*.rlib" -delete 2>/dev/null || true
          find target/debug -name "*.rlib" -delete 2>/dev/null || true

      - name: Check disk space after cleanup
        if: always()
        run: df -h

      - name: Show sccache stats
        if: always()
        run: sccache --show-stats
