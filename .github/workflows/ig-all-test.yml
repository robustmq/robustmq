# Copyright 2023 RobustMQ Team
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Ig All Test

on:
  push:
    paths-ignore:
      - "docs/**"
      - "**.md"
      - ".github/ISSUE_TEMPLATE/**"
      - ".github/pull_request_template.md"
  pull_request:
    paths-ignore:
      - "docs/**"
      - "**.md"
      - ".github/ISSUE_TEMPLATE/**"
      - ".github/pull_request_template.md"

# Cancel previous runs if a new commit is pushed
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Grant necessary permissions for package access
permissions:
  contents: read
  packages: read

env:
  CARGO_TERM_COLOR: always

jobs:
  # Split tests into separate jobs to avoid disk space issues
  # Each job gets independent 14GB disk space
  integration-tests:
    name: ${{ matrix.test-name }}
    runs-on: ubuntu-22.04
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        include:
          - test-name: "Meta Tests"
            test-filter: "meta"
            test-packages: "--package grpc-clients --package robustmq-test"
          - test-name: "Journal Tests"
            test-filter: "journal"
            test-packages: "--package robustmq-test"
          - test-name: "MQTT Tests"
            test-filter: "mqtt"
            test-packages: "--package robustmq-test"
    container:
      # 🚀 Use pre-built image with all dependencies for faster CI
      # Built from: docker/Dockerfile.deps
      # See docker/README.md for maintenance guide
      image: ghcr.io/robustmq/robustmq/rust-deps:latest
      options: --user root
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    env:
      CARGO_BUILD_JOBS: 8
      CARGO_INCREMENTAL: 0
      CARGO_PROFILE_RELEASE_DEBUG: false
      CARGO_PROFILE_RELEASE_STRIP: symbols
      RUST_BACKTRACE: 1
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Check disk space
        run: |
          echo "📊 Initial disk space:"
          df -h
          echo ""
          echo "🔍 Dependency cache status:"
          if [ -d "/build/target" ]; then
            echo "✅ Found pre-compiled dependencies!"
            du -sh /build/target 2>/dev/null || echo "N/A"
          else
            echo "⚠️ No dependency cache"
          fi

      - name: Build broker-server
        run: |
          echo "🔨 Building broker-server in release mode..."
          cargo build --release --package cmd --bin broker-server
          echo "✅ Build complete"
          df -h

      - name: Start broker-server
        run: |
          echo "Starting broker-server..."
          nohup target/release/broker-server >> broker.log 2>&1 &
          # Wait for broker to start
          sleep 5
          echo "Broker started"

      - name: Run ${{ matrix.test-name }}
        run: |
          echo "Running ${{ matrix.test-name }}..."
          cargo nextest run ${{ matrix.test-packages }} --test mod -- ${{ matrix.test-filter }}

      - name: Show broker logs on failure
        if: failure()
        run: |
          echo "=== Broker logs ==="
          tail -100 broker.log || true

      - name: Cleanup
        if: always()
        run: |
          # Kill broker process
          pkill -f broker-server || true
          # Clean test artifacts to free space
          rm -rf target/nextest
          rm -rf broker.log
          echo "📊 Final disk space:"
          df -h
