# Copyright 2023 RobustMQ Team
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Unit Test

on:
  push:
    paths-ignore:
      - "docs/**"
      - "**.md"
      - ".github/ISSUE_TEMPLATE/**"
      - ".github/pull_request_template.md"
  pull_request:
    paths-ignore:
      - "docs/**"
      - "**.md"
      - ".github/ISSUE_TEMPLATE/**"
      - ".github/pull_request_template.md"

# Cancel previous runs if a new commit is pushed
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
jobs:
  linux-tests:
    name: unit test
    runs-on: ubuntu-latest
    timeout-minutes: 300
    container:
      image: rust:latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Rust toolchain and cache
        uses: ./.github/actions/setup-builder

      - name: Install nextest and cargo-expand
        uses: taiki-e/install-action@v2
        with:
          tool: nextest,cargo-expand

      - name: Setup sccache
        uses: ./.github/actions/setup-sccache

      - name: Optimize build environment
        run: |
          # Set optimal parallel jobs for unit tests
          echo "CARGO_BUILD_JOBS=10" >> $GITHUB_ENV
          # Disable incremental for tests (saves space, tests are quick)
          echo "CARGO_INCREMENTAL=0" >> $GITHUB_ENV

      - name: Run tests with CI profile
        run: sh ./scripts/unit-test.sh ci

      - name: Clean test artifacts and large files
        if: always()
        run: |
          # Clean test artifacts
          rm -rf target/nextest
          rm -rf target/debug/incremental
          # Clean large intermediate files
          rm -rf target/debug/build
          find target -type f -name "*-????????????????" -delete 2>/dev/null || true
          # Clean test binaries
          find target -name "*test*" -type f -delete 2>/dev/null || true
          # Clean .rlib files
          find target/debug -name "*.rlib" -delete 2>/dev/null || true

      - name: Show sccache stats
        if: always()
        run: |
          if command -v sccache &> /dev/null; then
            sccache --show-stats
          else
            echo "sccache not available, skipping stats"
          fi
