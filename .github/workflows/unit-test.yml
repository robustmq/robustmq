# Copyright 2023 RobustMQ Team
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Unit Test

on:
  push:
    paths-ignore:
      - "docs/**"
      - "**.md"
      - ".github/ISSUE_TEMPLATE/**"
      - ".github/pull_request_template.md"
  pull_request:
    paths-ignore:
      - "docs/**"
      - "**.md"
      - ".github/ISSUE_TEMPLATE/**"
      - ".github/pull_request_template.md"

# Cancel previous runs if a new commit is pushed
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  CARGO_BUILD_JOBS: 16

jobs:
  unit-tests:
    name: ${{ matrix.group }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        include:
          - group: "Core & Common"
            packages: "-p broker-core -p common-base -p common-config -p common-metrics -p metadata-struct -p common-security -p rate-limit"
          - group: "Brokers"
            packages: "-p mqtt-broker -p admin-server -p broker-server"
          - group: "Storage & Services"
            packages: "-p storage-adapter -p meta-service -p journal-server -p journal-client -p schema-register"
          - group: "Protocol & Network"
            packages: "-p protocol -p network-server -p rocksdb-engine"
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler cmake
          protoc --version
          cmake --version

      - name: Install cargo-nextest
        uses: taiki-e/install-action@nextest

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "unit-test" # Shared across all unit test jobs
          cache-on-failure: true
          save-if: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev-116' }}

      - name: Build and run tests
        run: |
          echo "🧪 Building and running ${{ matrix.group }} tests..."
          cargo nextest run \
            --profile=ci \
            ${{ matrix.packages }} \
            --filter-expr '!(test(meta) & package(storage-adapter))'

      - name: Test Summary
        if: always()
        run: |
          echo "## 🧪 ${{ matrix.group }} Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ $? -eq 0 ]; then
            echo "✅ All tests passed!" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Some tests failed" >> $GITHUB_STEP_SUMMARY
          fi
